<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.myWork.mapper.MessageMapper">
    com.fc.myWork
    <resultMap id="BaseResultMap" type="Message">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="productId" column="product_id" jdbcType="BIGINT"/>
            <result property="outTime" column="out_time" jdbcType="TIMESTAMP"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="readStatus" column="read_status" jdbcType="TINYINT"/>
            <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,product_id,out_time,
        content,read_status,created_time,
        updated_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from message
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from message
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="Message" useGeneratedKeys="true">
        insert into message
        ( id,product_id,out_time
        ,content,read_status,created_time
        ,updated_time)
        values (#{id,jdbcType=BIGINT},#{productId,jdbcType=BIGINT},#{outTime,jdbcType=TIMESTAMP}
        ,#{content,jdbcType=VARCHAR},#{readStatus,jdbcType=TINYINT},#{createdTime,jdbcType=TIMESTAMP}
        ,#{updatedTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="Message" useGeneratedKeys="true">
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="productId != null">product_id,</if>
                <if test="outTime != null">out_time,</if>
                <if test="content != null">content,</if>
                <if test="readStatus != null">read_status,</if>
                <if test="createdTime != null">created_time,</if>
                <if test="updatedTime != null">updated_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="productId != null">#{productId,jdbcType=BIGINT},</if>
                <if test="outTime != null">#{outTime,jdbcType=TIMESTAMP},</if>
                <if test="content != null">#{content,jdbcType=VARCHAR},</if>
                <if test="readStatus != null">#{readStatus,jdbcType=TINYINT},</if>
                <if test="createdTime != null">#{createdTime,jdbcType=TIMESTAMP},</if>
                <if test="updatedTime != null">#{updatedTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Message">
        update message
        <set>
                <if test="productId != null">
                    product_id = #{productId,jdbcType=BIGINT},
                </if>
                <if test="outTime != null">
                    out_time = #{outTime,jdbcType=TIMESTAMP},
                </if>
                <if test="content != null">
                    content = #{content,jdbcType=VARCHAR},
                </if>
                <if test="readStatus != null">
                    read_status = #{readStatus,jdbcType=TINYINT},
                </if>
                <if test="createdTime != null">
                    created_time = #{createdTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedTime != null">
                    updated_time = #{updatedTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="Message">
        update message
        set 
            product_id =  #{productId,jdbcType=BIGINT},
            out_time =  #{outTime,jdbcType=TIMESTAMP},
            content =  #{content,jdbcType=VARCHAR},
            read_status =  #{readStatus,jdbcType=TINYINT},
            created_time =  #{createdTime,jdbcType=TIMESTAMP},
            updated_time =  #{updatedTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
